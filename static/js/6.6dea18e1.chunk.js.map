{"version":3,"file":"static/js/6.6dea18e1.chunk.js","mappings":"6NAEMA,EAAgBC,EAAAA,GAAAA,GAAH,2RAWbC,EAAcD,EAAAA,GAAAA,IAAH,gFAIXE,EAAaF,EAAAA,GAAAA,GAAH,4CAIVG,EAAYH,EAAAA,GAAAA,GAAH,uG,SCuBf,EAvCkB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,IAAD,WACE,SAACP,EAAD,UACGK,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAExB,OACE,UAACP,EAAD,YACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,UACE,SAACJ,EAAD,CACEa,IACEJ,EAAW,UANA,mCAMA,OACWA,GAClB,4FAENK,IAAKN,EACLO,MAAM,WAGV,SAACd,EAAD,UAAaO,MAZCD,EAenB,OAIR,C,qKC9BKS,EAAajB,EAAAA,GAAAA,KAAH,oHAMVkB,EAAYlB,EAAAA,GAAAA,MAAH,mIAQTmB,EAAYnB,EAAAA,GAAAA,OAAH,iO,SC0Bf,EArCa,SAAC,GAAkB,IAAhBoB,EAAe,EAAfA,SACd,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAMC,EAAAA,EAAAA,UACZC,QAAQC,IAAIH,GAkBZ,OACE,SAAC,IAAD,WACA,UAACP,EAAD,CAAYG,SAdO,SAAAQ,GACnBA,EAAEC,iBAEyB,KAAvBP,EAAYQ,QAIhBV,EAASE,GACTC,EAAe,IACfC,EAAIO,QAAQC,UAAW,GALnBR,EAAIO,QAAQC,UAAW,CAM5B,EAIC,WACI,SAACd,EAAD,CACAe,KAAK,OACLC,KAAK,QACLC,MAAOb,EACPc,SAvBe,SAAAR,GACnBL,EAAeK,EAAES,OAAOF,MAAMG,cAC/B,EAsBKC,YAAY,uBAEZ,SAACpB,EAAD,CAAWc,KAAK,SAASO,IAAKhB,EAA9B,wBAIP,E,SCQD,EAzCe,WAAO,IAAD,EACnB,GAAwCiB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMR,EAAK,UAAGO,EAAaE,IAAI,gBAApB,QAAgC,GAC3C,GAA4BvB,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAeyC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,uGACsBC,EAAAA,EAAAA,IAAmBZ,GADzC,OACQa,EADR,OAEQC,EAAUD,EAAMzC,KAAI,kBAAiC,CACzDC,GADwB,EAAGA,GAE3BC,MAFwB,EAAOA,MAG/BC,YAHwB,EAAcA,YAAd,IAK1BmC,EAAUI,GAPZ,4CAJc,sBACA,KAAVd,GADU,mCAade,EACD,GAAE,CAACf,IAEJ,IAMMgB,EAAoB,SAAAC,GAExBT,EAD4B,KAAVS,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAE/C,EAED,OACE,6BACE,SAAC,EAAD,CAAMhC,SAbS,SAAAE,GACjBqB,EAAgB,IAChBQ,EAAkB7B,EAEnB,IAUIlB,IAAU,SAACiD,EAAA,EAAD,CAAWjD,OAAQA,IACX,IAAlBA,EAAOkD,SAAgB,SAAC,IAAD,WAAW,sDAGxC,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nconst MoviesGallery = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 20px;\n    margin-top: 0;\n    margin-bottom: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`\nconst MoviesImage = styled.img`\n    box-shadow: 0 0 5px #000;\n    border-radius: 6px;\n`\nconst MovieTitle = styled.h2`\n    color: #000;\n\n`\nconst MovieItem = styled.li`\ntransition: all 0.3s;\n    &:hover {\n        transform: scale(1.005);\n    }\n`\n\nexport {MoviesGallery, MoviesImage, MovieTitle, MovieItem};","import { Link, useLocation } from 'react-router-dom';\nimport { Container } from 'components/App/App.styled';\nimport { MoviesGallery, MoviesImage, MovieTitle, MovieItem } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      <MoviesGallery>\n        {movies.map(({ id, title, poster_path }) => {\n          const base_img_url = 'https://image.tmdb.org/t/p/w500';\n          return (\n            <MovieItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <MoviesImage\n                  src={\n                    poster_path\n                      ? `${base_img_url}${poster_path}`\n                      : 'https://t4.ftcdn.net/jpg/04/70/29/97/240_F_470299797_UD0eoVMMSUbHCcNJCdv2t8B2g1GVqYgs.jpg'\n                  }\n                  alt={title}\n                  width='500'\n                />\n              </Link>\n              <MovieTitle>{title}</MovieTitle>\n            </MovieItem>\n          );\n        })}\n      </MoviesGallery>\n    </Container>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      poster_path: PropTypes.string\n    })\n  )\n}\n\nexport default MovieList;\n","import styled from \"styled-components\";\n\nconst SearchForm = styled.form`\nmargin-bottom: 10px;\nbackground-color: teal;\npadding: 20px;\nbox-shadow: 0 2px 2px #000;\n`\nconst InputForm = styled.input`\npadding: 10px;\nmargin-right: 10px;\noutline: none;\nborder: none;\nfont-size: 18px;\nborder-radius: 4px;\n`\nconst BtnSubmit = styled.button`\nborder: none;\nborder-radius: 4px;\nbackground-color: #28718d;\npadding: 10px;\nfont-size: 18px;\ntransition: all 0.3s;\n\n&:hover, \n&:focus {\n    box-shadow: 0 0 5px #000;\n    cursor: pointer;\n}\n`\n\nexport {SearchForm, InputForm, BtnSubmit};","import { Container } from \"components/App/App.styled\";\nimport { SearchForm, InputForm, BtnSubmit } from \"./Form.styled\";\nimport { useState, useRef } from 'react';\n\n\nconst Form = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const btn = useRef();\n  console.log(btn)\n\n  const handleChange = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n        btn.current.disabled = true;\n      return\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('');\n    btn.current.disabled = true;\n  };\n\n  return (\n    <Container>\n    <SearchForm onSubmit={handleSubmit}>\n        <InputForm \n        type=\"text\" \n        name=\"value\"\n        value={searchQuery}\n        onChange={handleChange}\n        placeholder=\"enter movies name\"\n         />\n        <BtnSubmit type='submit' ref={btn}>Search</BtnSubmit>\n    </SearchForm>\n    </Container>\n  )\n};\n\nexport default Form;","import { searchMovieByValue } from 'api/api';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Form from 'components/Form';\nimport MovieList from 'components/MovieList';\nimport { Container } from 'components/App/App.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const value = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (value === '') {\n      return;\n    }\n    async function fetchMovies() {\n      const movie = await searchMovieByValue(value);\n      const results = movie.map(({ id, title, poster_path }) => ({\n        id,\n        title,\n        poster_path,\n      }));\n      setMovies(results);\n    }\n    fetchMovies();\n  }, [value]);\n\n  const formSubmit = searchQuery => {\n    setSearchParams('');\n    updateSearchValue(searchQuery);\n    \n  };\n\n  const updateSearchValue = query => {\n    const nextValue = query !== '' ? { query } : {};\n    setSearchParams(nextValue);\n  };\n\n  return (\n    <main>\n      <Form onSubmit={formSubmit} />\n      {movies && <MovieList movies={movies} />}\n      {movies.length === 0 && <Container><h2>No results, try again</h2></Container>}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesGallery","styled","MoviesImage","MovieTitle","MovieItem","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","width","SearchForm","InputForm","BtnSubmit","onSubmit","useState","searchQuery","setSearchQuery","btn","useRef","console","log","e","preventDefault","trim","current","disabled","type","name","value","onChange","target","toLowerCase","placeholder","ref","useSearchParams","searchParams","setSearchParams","get","setMovies","useEffect","searchMovieByValue","movie","results","fetchMovies","updateSearchValue","query","MovieList","length"],"sourceRoot":""}